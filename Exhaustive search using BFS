class Bfs:
    def __init__(self,graph):
        self.graph=graph
        self.opened=[]
        self.closed=[]
        
    
    def succ(self,x):
        self.l=[a for a in self.graph[x]]
        return self.l
    
    
    def bfs(self,start,goal):
        self.goal=goal
        self.start=start
        self.opened.append(self.start)
        while self.opened:
            node=self.opened.pop(0)
            if node not in self.closed:
                self.closed.append(node)
            if node== self.goal:
                print(self.closed) 
                break
            suc=self.succ(node) 
    
            for i in suc:
                if i not in self.closed:
                    self.opened.append(i)
                    
                    
                    
B=Bfs({1:[2,3,4],2:[1,5,6],3:[1,6,7],4:[],5:[2,8,9],6:[2,3,10],7:[],8:[],9:[],10:[]}) 
B.bfs(1,8)        
